!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("sequence",[],n):"object"==typeof exports?exports.sequence=n():e.sequence=n()}(window,function(){return function(e){var n={};function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,r){"use strict";var t=r(1),o=r(2);e.exports={recaman:t.recaman,recamanSequence:t.recamanSequence,fibonacci:o.fibonacci,fibonacciSequnce:o.fibonacciSequence}},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.recaman=function(e){var n,r=[],t=0;if("number"!=typeof e)throw n=new Error("Input must be of type number"),console.error(n.stack),n;for(var o=1;o<=e;o++)t-o>0&&!r.includes(t-o)?(t-=o,r.push(t)):(t+=o,r.push(t));return t},n.recamanSequence=function(e){var n,r=[],t=0;if("number"!=typeof e)throw n=new Error("Input must be of type number"),console.error(n.stack),n;for(var o=1;o<=e;o++)t-o>0&&!r.includes(t-o)?(t-=o,r.push(t)):(t+=o,r.push(t));return r}},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.fibonacciSequence=n.fibonacci=void 0;var t=function(e){if(e<0||"number"!=typeof e){var n=new Error("Invalid input: must be a single positive integer or 0.");throw console.error(n.stack),n}return!0};n.fibonacci=function e(n){return t(n),0===n||1===n?n:e(n-2)+e(n-1)};n.fibonacciSequence=function(e){var n=[];t(e);for(var r=0;r<=e;r++)0===r||1===r?n.push(r):n.push(n[r-1]+n[r-2]);return n}}])});