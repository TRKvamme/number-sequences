{"version":3,"sources":["webpack://int-seq-generator/webpack/universalModuleDefinition","webpack://int-seq-generator/webpack/bootstrap","webpack://int-seq-generator/./src/fibonacci.js","webpack://int-seq-generator/./src/index.js","webpack://int-seq-generator/./src/recaman.js"],"names":["validate","number","error","Error","console","stack","fibonacci","fibonacciSequence","sequence","index","push","recaman","module","exports","recamanSequence","fibonacciSequnce","output","counter","includes"],"mappings":"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","file":"int-seq-generator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"int-seq-generator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"int-seq-generator\"] = factory();\n\telse\n\t\troot[\"int-seq-generator\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","\r\n/**\r\n * Validates if input if fit to make a fibonacci sequence from.\r\n * @param {*} number input you want to validate.\r\n */\r\nconst validate = (number) => {\r\n  if (number < 0 || typeof (number) !== 'number') {\r\n    let error = new Error('Invalid input: must be a positive integer or 0.');\r\n\r\n    console.error(error.stack);\r\n    throw error;\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Number} number the index of the sequence you want returned.\r\n */\r\nexport const fibonacci = (number) => {\r\n  validate(number);\r\n  if (number === 0 || number === 1) {\r\n    return number;\r\n  }\r\n  return fibonacci(number - 2) + fibonacci(number - 1);\r\n};\r\n/**\r\n *\r\n * @param {Number} number the index of the final fibonacci number in the sequence.\r\n */\r\nexport const fibonacciSequence = (number) => {\r\n  let sequence = [];\r\n\r\n  validate(number);\r\n  for (let index = 0; index <= number; index++) {\r\n    if (index === 0 || index === 1) {\r\n      sequence.push(index);\r\n    } else {\r\n      sequence.push(sequence[index - 1] + sequence[index - 2]);\r\n    }\r\n  }\r\n  return sequence;\r\n};\r\n\r\n","var recaman = require('./recaman');\r\nvar fibonacci = require('./fibonacci');\r\n\r\nmodule.exports = {\r\n  /**\r\n   *  Gives the Nth number in a recaman sequence\r\n   * @param number The index of the number you want in a recaman-sequence\r\n   * @returns the n-th number of a recaman-sequence\r\n   */\r\n  recaman: recaman.recaman,\r\n  /**\r\n   * Generates a the N first number in a recaman sequence\r\n   *  @param number Length of the recaman sequence you want to produce.\r\n   *  @returns an array of the N first number in a recaman sequence\r\n   */\r\n  recamanSequence: recaman.recamanSequence,\r\n  /**\r\n   *  Gives the Nth number in a fibonacci sequence\r\n   * @param number The index of the number you want in the sequence\r\n   * @returns the n-th number of a fibonacci-sequence\r\n   */\r\n  fibonacci: fibonacci.fibonacci,\r\n  /**\r\n   *  Generates a fibonacci sequence up to and\r\n   * @param number The index of the last number you want in a fibonacci-sequence.\r\n   * @returns the n-th number of a recaman-sequence\r\n   */\r\n  fibonacciSequnce: fibonacci.fibonacciSequence\r\n};\r\n","export function recaman(number) {\r\n  let sequence = [];\r\n  let output = 0;\r\n  let error;\r\n\r\n  if (typeof (number) !== 'number') {\r\n    error = new Error('Input must be of type number');\r\n    console.error(error.stack);\r\n    throw error;\r\n  }\r\n  for (let counter = 1; counter <= number; counter++) {\r\n    if (output - counter > 0 && !sequence.includes(output - counter)) {\r\n      output = output - counter;\r\n      sequence.push(output);\r\n    } else {\r\n      output = output + counter;\r\n      sequence.push(output);\r\n    }\r\n  }\r\n  return output;\r\n};\r\nexport function recamanSequence(number) {\r\n  let sequence = [];\r\n  let output = 0;\r\n  let error;\r\n\r\n  if (typeof (number) !== 'number') {\r\n    error = new Error('Input must be of type number');\r\n    console.error(error.stack);\r\n    throw error;\r\n  }\r\n  for (let counter = 1; counter <= number; counter++) {\r\n    if ((output - counter > 0) && !sequence.includes(output - counter)) {\r\n      output = output - counter;\r\n      sequence.push(output);\r\n    } else {\r\n      output = output + counter;\r\n      sequence.push(output);\r\n    }\r\n  }\r\n  return sequence;\r\n};\r\n"],"sourceRoot":""}